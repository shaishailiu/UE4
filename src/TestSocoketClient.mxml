<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx" creationComplete="init()">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
<fx:Script>
	<![CDATA[
		private var socket:Socket;
		
		private var bufferByteArray:ByteArray = new ByteArray();//接受数据的缓冲区
		private static var BUFFER_MAX_LENGTH:int=100000;//缓冲区最大长度
		
		private function init():void{
			socket = new Socket();
			socket.connect("127.0.0.1",6469);
			socket.addEventListener(Event.CONNECT,onconnect);
			socket.addEventListener(IOErrorEvent.IO_ERROR,onError);
			socket.addEventListener(SecurityErrorEvent.SECURITY_ERROR,onseError);
			socket.addEventListener(ProgressEvent.SOCKET_DATA,onData);
		}
		
		private function onconnect(e:Event):void{
			trace("连接成功");
		}

		//接收到消息
		protected function onData(e:ProgressEvent):void{
			
			//将数据写入缓冲区
			socket.readBytes(bufferByteArray, bufferByteArray.length, socket.bytesAvailable);
			//清除掉读过的数据，防止bufferByteArray过长
			if(bufferByteArray.length > BUFFER_MAX_LENGTH) 
			{
				var tempBA:ByteArray = new ByteArray();
				//bufferByteArray 的 position 决定了 bytesAvailable 肯定是未读取的数据的长度  ---nick
				bufferByteArray.readBytes(tempBA, 0, bufferByteArray.bytesAvailable);
				bufferByteArray.position = 0;
				bufferByteArray.length = 0;
				tempBA.readBytes(bufferByteArray, 0, tempBA.bytesAvailable);
			}
			//读取缓冲区数据
			readSocketData();
			
		}
		
		private function onError(e:IOErrorEvent):void{
			trace("连接失败,服务器没打开!")
		}
		private function onseError(e:SecurityErrorEvent):void{
			trace("连接失败，安全错误"+e.text)
		}
		
		private function readSocketData():void 
		{
			var bufferPosition:int;//记录当前缓冲区的指针
			var msgHeadMark:int;//取出消息头标识
			var msgLen:int;//得到该数据包的包体长度
			
			while(bufferByteArray.bytesAvailable>4) //这里如果网速过慢，会不会等待超过15毫秒？？  不会的！
			{
				bufferPosition = bufferByteArray.position
				
				msgLen = bufferByteArray.readShort();
				if(msgLen > bufferByteArray.bytesAvailable) {//长度不够，等待缓冲区下一次读取
					bufferByteArray.position = bufferPosition;//还原指针
					return;
				} 
				else 
				{
					var dataBuf:ByteArray = new ByteArray();
					//根据数据流中存储的包长度 减去文件头2和长度数据自身2,剩下的就是包的主体长度  ---nick
					bufferByteArray.readBytes(dataBuf, 0, msgLen);
					
					
					trace("收到消息：" + dataBuf.readUTF());
					
					//var msgCode:int = dataBuf.readInt();
					//检查消息,如果是重要消息就直接执行了，否则才添加到队列中
					//if(NetManager.checkImportantMsg(msgCode, dataBuf))
					//{
					//存入服务器消息数组
					// 此时的 dataBuf 中的 position 已经是4了, 传递到别的函数中, pos不变 ---nick
					//serverMsgArr.push([msgCode, dataBuf]);
					//}
				}
				
				
			}
		}
		
		private function sendmsg():void{
			var byte:ByteArray = new ByteArray();
			byte.writeUTF(txt.text);
			
			sendByte(byte);
			
			txt.text="";
		}
		
		private function sendByte(byte:ByteArray):void{
			var msgByte:ByteArray = new ByteArray;
			msgByte.writeShort(byte.length);
			msgByte.writeBytes(byte,0,byte.length);
			
			socket.writeBytes(msgByte,0,msgByte.length);
			socket.flush();
		}
		
	]]>
</fx:Script>
<s:TextInput id="txt" width="200" x="20" y="50"/>
<s:Button label="发送" x="250" y="50" click="sendmsg()"/>
</s:WindowedApplication>
